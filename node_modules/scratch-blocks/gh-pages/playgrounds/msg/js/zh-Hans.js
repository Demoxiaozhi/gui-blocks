// This file was automatically generated.  Do not modify.




Blockly.Msg["ADD_COMMENT"] = "Add Comment";  // untranslated
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";
Blockly.Msg["CATEGORY_CONTROL"] = "控制";
Blockly.Msg["CATEGORY_DATA"] = "数据";
Blockly.Msg["CATEGORY_ELECTRONICSCOMMUNICATE"] = "通信";
Blockly.Msg["CATEGORY_ELECTRONICSINPUT"] = "输入";
Blockly.Msg["CATEGORY_ELECTRONICSOUTPUT"] = "输出";
Blockly.Msg["CATEGORY_ELECTRONICSSENSOR"] = "感知";
Blockly.Msg["CATEGORY_EVENTS"] = "事件";
Blockly.Msg["CATEGORY_LOOKS"] = "外观";
Blockly.Msg["CATEGORY_MOTION"] = "动作";
Blockly.Msg["CATEGORY_OPERATORS"] = "运算";
Blockly.Msg["CATEGORY_PEN"] = "画笔";
Blockly.Msg["CATEGORY_SENSING"] = "侦测";
Blockly.Msg["CATEGORY_SOUND"] = "声音";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Change value:";  // untranslated
Blockly.Msg["CLEAN_UP"] = "Clean up Blocks";  // untranslated
Blockly.Msg["COLLAPSE_ALL"] = "Collapse Blocks";  // untranslated
Blockly.Msg["COLLAPSE_BLOCK"] = "Collapse Block";  // untranslated
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "colour 1";  // untranslated
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "colour 2";  // untranslated
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg["COLOUR_BLEND_RATIO"] = "ratio";  // untranslated
Blockly.Msg["COLOUR_BLEND_TITLE"] = "blend";  // untranslated
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
Blockly.Msg["COLOUR_BRIGHTNESS_LABEL"] = "Brightness";  // untranslated
Blockly.Msg["COLOUR_HUE_LABEL"] = "Color";  // untranslated
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://en.wikipedia.org/wiki/Color";  // untranslated
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Choose a colour from the palette.";  // untranslated
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "random colour";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Choose a colour at random.";  // untranslated
Blockly.Msg["COLOUR_RGB_BLUE"] = "blue";  // untranslated
Blockly.Msg["COLOUR_RGB_GREEN"] = "green";  // untranslated
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg["COLOUR_RGB_RED"] = "red";  // untranslated
Blockly.Msg["COLOUR_RGB_TITLE"] = "colour with";  // untranslated
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";  // untranslated
Blockly.Msg["COLOUR_SATURATION_LABEL"] = "Saturation";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "break out of loop";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "continue with next iteration of loop";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Break out of the containing loop.";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warning: This block may only be used within a loop.";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "for each item %1 in list %2";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "count with %1 from %2 to %3 by %4";  // untranslated
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Add a condition to the if block.";  // untranslated
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "else";  // untranslated
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "else if";  // untranslated
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "if";  // untranslated
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "If a value is true, then do some statements.";  // untranslated
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "do";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "repeat %1 times";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Do some statements several times.";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repeat until";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repeat while";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "While a value is false, then do some statements.";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "While a value is true, then do some statements.";  // untranslated
Blockly.Msg["CONTROL_CREATE_CLONE_OF"] = "克隆 %1";
Blockly.Msg["CONTROL_CREATE_CLONE_OF_MYSELF"] = "自己";
Blockly.Msg["CONTROL_DELETE_THIS_CLONE"] = "删除本克隆体";
Blockly.Msg["CONTROL_FOREVER"] = "重复执行";
Blockly.Msg["CONTROL_IF"] = "如果 %1 那么";
Blockly.Msg["CONTROL_IF_ELSE"] = "如果 %1 那么";
Blockly.Msg["CONTROL_IF_ELSE_ELSE"] = "否则";
Blockly.Msg["CONTROL_REPEAT"] = "重复执行 %1 次";
Blockly.Msg["CONTROL_REPEAT_UNTIL"] = "重复执行直到 %1";
Blockly.Msg["CONTROL_START_AS_CLONE"] = "当作为克隆体启动时";
Blockly.Msg["CONTROL_STOP"] = "停止";
Blockly.Msg["CONTROL_STOPMENUALL"] = "全部";
Blockly.Msg["CONTROL_STOPMENUOTHER"] = "角色的其它脚本";
Blockly.Msg["CONTROL_STOPMENUTHIS"] = "当前脚本";
Blockly.Msg["CONTROL_WAIT"] = "等待 %1 秒";
Blockly.Msg["CONTROL_WAIT_UNTIL"] = "在 %1 之前一直等待";
Blockly.Msg["DATA_ADDTOLIST"] = "将 %1 加到 %2";
Blockly.Msg["DATA_CHANGEVARIABLEBY"] = "将 %1 增加 %2";
Blockly.Msg["DATA_DELETEOFLIST"] = "删除第 %1 项于 %2";
Blockly.Msg["DATA_HIDELIST"] = "隐藏列表 %1";
Blockly.Msg["DATA_INSERTATLIST"] = "插入 %1 为第 %2 项于 %3";
Blockly.Msg["DATA_ITEMOFLIST"] = "第 %1 项于 %2";
Blockly.Msg["DATA_LENGTHOFLIST"] = "%1 的项目数";
Blockly.Msg["DATA_LISTCONTAINSITEM"] = "%1 包含 %2?";
Blockly.Msg["DATA_LISTINDEXALLALL"] = "全部";
Blockly.Msg["DATA_LISTINDEXALLLAST"] = "末尾";
Blockly.Msg["DATA_LISTINDEXRANDOMLAST"] = "末尾";
Blockly.Msg["DATA_LISTINDEXRANDOMRANDOM"] = "随机";
Blockly.Msg["DATA_REPLACEITEMOFLIST"] = "替换 %1 项于 %2 为 %3";
Blockly.Msg["DATA_SETVARIABLETO"] = "将 %1 设定为 %2";
Blockly.Msg["DATA_SHOWLIST"] = "显示列表 %1";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Delete all %1 blocks?";  // untranslated
Blockly.Msg["DELETE_BLOCK"] = "Delete Block";  // untranslated
Blockly.Msg["DELETE_VARIABLE"] = "删除变量 '%1'";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";
Blockly.Msg["DELETE_X_BLOCKS"] = "Delete %1 Blocks";  // untranslated
Blockly.Msg["DISABLE_BLOCK"] = "Disable Block";  // untranslated
Blockly.Msg["DUPLICATE_BLOCK"] = "Duplicate";  // untranslated
Blockly.Msg["EDIT_PROCEDURE"] = "Edit";  // untranslated
Blockly.Msg["ELECTRONICS_ARDUINOMAINLOOP"] = "重复执行";
Blockly.Msg["ELECTRONICS_ARDUINOMAINSETUP"] = "当cubic启动时";
Blockly.Msg["ELECTRONICS_BUZZERALARM"] = "蜂鸣器 %1 报警";
Blockly.Msg["ELECTRONICS_BUZZERMENU_ALTO"] = "中";
Blockly.Msg["ELECTRONICS_BUZZERMENU_BASS"] = "低";
Blockly.Msg["ELECTRONICS_BUZZERMENU_TREBLE"] = "高";
Blockly.Msg["ELECTRONICS_BUZZERNOTE"] = "蜂鸣器 %1 发 %2 %3 音调 %4 节拍";
Blockly.Msg["ELECTRONICS_BUZZERRING"] = "蜂鸣器 %1 发 %2 Hz的声音";
Blockly.Msg["ELECTRONICS_BUZZERSTOP"] = "蜂鸣器 %1 停止发声";
Blockly.Msg["ELECTRONICS_DCMCGO"] = "直流电机控制器 %1 %2 %3, 速度 %4";
Blockly.Msg["ELECTRONICS_DCMCSTOP"] = "直流电机控制器 %1 %2 停止";
Blockly.Msg["ELECTRONICS_DCMOTORGO"] = "直流电机 %1 %2 速度 %3";
Blockly.Msg["ELECTRONICS_DCMOTORSTOP"] = "直流电机 %1 停止";
Blockly.Msg["ELECTRONICS_FLAME"] = "火焰传感器 %1 的值";
Blockly.Msg["ELECTRONICS_FLAMEDETECTED"] = "火焰传感器 %1 检测到火?";
Blockly.Msg["ELECTRONICS_GYRO"] = "陀螺仪 %1 %2 轴的 %3";
Blockly.Msg["ELECTRONICS_GYROCALIBRATE"] = "陀螺仪 %1 校准";
Blockly.Msg["ELECTRONICS_GYROMENU_ACCELE"] = "加速度";
Blockly.Msg["ELECTRONICS_GYROMENU_ANGLE"] = "角度";
Blockly.Msg["ELECTRONICS_GYROMENU_ANGULAR"] = "角加速度";
Blockly.Msg["ELECTRONICS_IRDETECTORSENSOR"] = "红外避障传感器 %1 检测到障碍?";
Blockly.Msg["ELECTRONICS_IRMENU_BOTH"] = "1号2号都在黑线内";
Blockly.Msg["ELECTRONICS_IRMENU_NONE"] = "1号2号都不在黑线内";
Blockly.Msg["ELECTRONICS_IRMENU_ONE"] = "只有1号在黑线内";
Blockly.Msg["ELECTRONICS_IRMENU_TWO"] = "只有2号在黑线内";
Blockly.Msg["ELECTRONICS_IRREMOTEKEYCODE"] = "红外遥控器按键 %1 的编码";
Blockly.Msg["ELECTRONICS_IRREMOTEKEYPRESSED"] = "红外遥控器 %1 %2 被按下?";
Blockly.Msg["ELECTRONICS_IRTRACKING"] = "红外循迹 %1 %2?";
Blockly.Msg["ELECTRONICS_IRTRACKINGVALUE"] = "红外循迹 %1 的值";
Blockly.Msg["ELECTRONICS_IRTRANSCEIVERCODE"] = "红外收发器 %1 接收的编码";
Blockly.Msg["ELECTRONICS_IRTRANSCEIVERCODESEND"] = "红外收发器 %1 发送编码 %2";
Blockly.Msg["ELECTRONICS_JOYSTICK"] = "摇杆 %1 %2 轴的值";
Blockly.Msg["ELECTRONICS_JOYSTICKPRESSED"] = "摇杆 %1 被按下?";
Blockly.Msg["ELECTRONICS_KEYS"] = "按键 %1 的值";
Blockly.Msg["ELECTRONICS_LEDDIGITDISPLAY"] = "四位数码管 %1 显示 %2";
Blockly.Msg["ELECTRONICS_LEDDIGITDISPLAYXY"] = "四位数码管 %1 显示 %2 : %3";
Blockly.Msg["ELECTRONICS_LEDMENU_OFF"] = "熄灭";
Blockly.Msg["ELECTRONICS_LEDMENU_ON"] = "点亮";
Blockly.Msg["ELECTRONICS_LIGHTSENSOR"] = "光敏传感器 %1 的值";
Blockly.Msg["ELECTRONICS_LIGHTSENSORDETECTED"] = "光敏传感器 %1 检测到光?";
Blockly.Msg["ELECTRONICS_MOTORMENU_BACKWARD"] = "反转";
Blockly.Msg["ELECTRONICS_MOTORMENU_FORWARD"] = "正转";
Blockly.Msg["ELECTRONICS_PORTMENU_1"] = "端口1";
Blockly.Msg["ELECTRONICS_PORTMENU_2"] = "端口2";
Blockly.Msg["ELECTRONICS_PORTMENU_3"] = "端口3";
Blockly.Msg["ELECTRONICS_PORTMENU_4"] = "端口4";
Blockly.Msg["ELECTRONICS_PORTMENU_5"] = "端口5";
Blockly.Msg["ELECTRONICS_PORTMENU_6"] = "端口6";
Blockly.Msg["ELECTRONICS_RAINDROP"] = "雨滴传感器 %1 检测到雨滴?";
Blockly.Msg["ELECTRONICS_RGBLAMP"] = "设置RGB全彩灯 %1 %2 R: %3 G: %4 B: %5";
Blockly.Msg["ELECTRONICS_RGBLAMPPICK"] = "设置RGB全彩灯 %1 %2 %3";
Blockly.Msg["ELECTRONICS_ROTARYKNOB"] = "旋钮 %1 的值";
Blockly.Msg["ELECTRONICS_SERVOCURRENTANGLE"] = "舵机 %1 当前角度";
Blockly.Msg["ELECTRONICS_SERVOGOTOANGLE"] = "舵机 %1 输出角度 %2 ,用时 %3 秒";
Blockly.Msg["ELECTRONICS_SETLED"] = "将LED %1 %2";
Blockly.Msg["ELECTRONICS_SMOKE"] = "烟雾传感器 %1 的值";
Blockly.Msg["ELECTRONICS_SMOKEDETECTED"] = "烟雾传感器 %1 检测到烟?";
Blockly.Msg["ELECTRONICS_SOILHUMIDITY"] = "土壤湿度传感器 %1 的值";
Blockly.Msg["ELECTRONICS_SONAR"] = "超声波 %1 的距离";
Blockly.Msg["ELECTRONICS_SOUNDSENSOR"] = "声音传感器 %1 的值";
Blockly.Msg["ELECTRONICS_SOUNDSENSORDETECTED"] = "声音传感器 %1 检测到声音?";
Blockly.Msg["ELECTRONICS_TEMPHUMIDITYSENSORHUMIDITY"] = "温湿度传感器 %1 的湿度";
Blockly.Msg["ELECTRONICS_TEMPHUMIDITYSENSORTEMP"] = "温湿度传感器 %1 的温度";
Blockly.Msg["ELECTRONICS_TSPRESSED"] = "触碰开关 %1 被按下?";
Blockly.Msg["ELECTRONICS_WATERTEMP"] = "水温传感器 %1 的值";
Blockly.Msg["ENABLE_BLOCK"] = "Enable Block";  // untranslated
Blockly.Msg["EVENTS_BROADCAST"] = "广播 %1";
Blockly.Msg["EVENTS_BROADCASTANDWAIT"] = "广播 %1 并等待";
Blockly.Msg["EVENTS_BROADCASTMENUMSG1"] = "消息1";
Blockly.Msg["EVENTS_BROADCASTMENUMSG2"] = "消息2";
Blockly.Msg["EVENTS_BROADCASTMENUNEWMSG"] = "新消息";
Blockly.Msg["EVENTS_WHENBACKDROPSWITCHESTO"] = "当背景切换到 %1";
Blockly.Msg["EVENTS_WHENBROADCASTRECEIVED"] = "当接收到 %1";
Blockly.Msg["EVENTS_WHENFLAGCLICKED"] = "当 %1 被点击";
Blockly.Msg["EVENTS_WHENGREATERTHAN"] = "当 %1 > %2";
Blockly.Msg["EVENTS_WHENGREATERTHANMENUTIMER"] = "定时器";
Blockly.Msg["EVENTS_WHENKEYPRESSED"] = "当按下 %1 键";
Blockly.Msg["EVENTS_WHENKEYPRESSEDMENUANY"] = "任意键";
Blockly.Msg["EVENTS_WHENKEYPRESSEDMENUDOWN"] = "下移键";
Blockly.Msg["EVENTS_WHENKEYPRESSEDMENULEFT"] = "左移键";
Blockly.Msg["EVENTS_WHENKEYPRESSEDMENURIGHT"] = "右移键";
Blockly.Msg["EVENTS_WHENKEYPRESSEDMENUSPACE"] = "空格";
Blockly.Msg["EVENTS_WHENKEYPRESSEDMENUUP"] = "上移键";
Blockly.Msg["EVENTS_WHENTHISSPRITECLICKED"] = "当角色被点击时";
Blockly.Msg["EXPAND_ALL"] = "Expand Blocks";  // untranslated
Blockly.Msg["EXPAND_BLOCK"] = "Expand Block";  // untranslated
Blockly.Msg["EXTERNAL_INPUTS"] = "External Inputs";  // untranslated
Blockly.Msg["HELP"] = "Help";  // untranslated
Blockly.Msg["INLINE_INPUTS"] = "Inline Inputs";  // untranslated
Blockly.Msg["IOS_CANCEL"] = "Cancel";  // untranslated
Blockly.Msg["IOS_ERROR"] = "Error";  // untranslated
Blockly.Msg["IOS_OK"] = "OK";  // untranslated
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Add Input";  // untranslated
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Allow statements";  // untranslated
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "This function has duplicate inputs.";  // untranslated
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "INPUTS";  // untranslated
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Add";  // untranslated
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Add Variable";  // untranslated
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Delete";  // untranslated
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "You can't use an empty variable name.";  // untranslated
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Rename";  // untranslated
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Variable name";  // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "create empty list";  // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "list";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "create list with";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the list.";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "first";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# from end";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET"] = "get";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "get and remove";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "last";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "random";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "remove";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Returns the first item in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "to #";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "to last";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 is the last item.";  // untranslated
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 is the first item.";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
Blockly.Msg["LISTS_INLIST"] = "in list";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Returns true if the list is empty.";  // untranslated
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "length of %1";  // untranslated
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "as";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "insert at";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET"] = "set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "ascending";  // untranslated
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "descending";  // untranslated
Blockly.Msg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numeric";  // untranslated
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alphabetic";  // untranslated
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "false";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Returns either true or false.";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "true";  // untranslated
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Return true if both inputs equal each other.";  // untranslated
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Return true if both inputs are not equal to each other.";  // untranslated
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "not %1";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
Blockly.Msg["LOGIC_NULL"] = "null";  // untranslated
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Returns null.";  // untranslated
Blockly.Msg["LOGIC_OPERATION_AND"] = "and";  // untranslated
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "or";  // untranslated
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Return true if both inputs are true.";  // untranslated
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "test";  // untranslated
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "if false";  // untranslated
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "if true";  // untranslated
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
Blockly.Msg["LOOKS_BACKDROPNAME"] = "背景名称";
Blockly.Msg["LOOKS_BACKDROPORDER"] = "背景编号";
Blockly.Msg["LOOKS_CHANGEEFFECTBY"] = "将 %1 特效增加 %2";
Blockly.Msg["LOOKS_CHANGESIZEBY"] = "将角色的大小增加 %1";
Blockly.Msg["LOOKS_CLEARGRAPHICEFFECTS"] = "清除所有图形特效";
Blockly.Msg["LOOKS_COSTUMEORDER"] = "造型编号";
Blockly.Msg["LOOKS_EFFECTMENUBRIGHTNESS"] = "亮度";
Blockly.Msg["LOOKS_EFFECTMENUCOLOR"] = "颜色";
Blockly.Msg["LOOKS_EFFECTMENUFISHEYE"] = "鱼眼";
Blockly.Msg["LOOKS_EFFECTMENUGHOST"] = "虚像";
Blockly.Msg["LOOKS_EFFECTMENUMOSAIC"] = "马赛克";
Blockly.Msg["LOOKS_EFFECTMENUPIXELATE"] = "像素化";
Blockly.Msg["LOOKS_EFFECTMENUWHIRL"] = "旋转";
Blockly.Msg["LOOKS_GOBACKLAYERS"] = "下移 %1 层";
Blockly.Msg["LOOKS_GOTOFRONT"] = "移至最上层";
Blockly.Msg["LOOKS_HIDE"] = "隐藏";
Blockly.Msg["LOOKS_NEXTBACKDROP"] = "下一个背景";
Blockly.Msg["LOOKS_NEXTCOSTUME"] = "下一个造型";
Blockly.Msg["LOOKS_SAY"] = "说 %1";
Blockly.Msg["LOOKS_SAYFORSECS"] = "说 %1 %2 秒";
Blockly.Msg["LOOKS_SETEFFECTTO"] = "将 %1 特效设定为 %2";
Blockly.Msg["LOOKS_SETSIZETO"] = "将角色的大小设定为 %1 %";
Blockly.Msg["LOOKS_SHOW"] = "显示";
Blockly.Msg["LOOKS_SIZE"] = "大小";
Blockly.Msg["LOOKS_SWITCHBACKDROPTO"] = "将背景切换为 %1";
Blockly.Msg["LOOKS_SWITCHBACKDROPTOWAIT"] = "切换背景为 %1 并等待";
Blockly.Msg["LOOKS_SWITCHCOSTUMETO"] = "将造型切换为 %1";
Blockly.Msg["LOOKS_THINK"] = "思考 %1";
Blockly.Msg["LOOKS_THINKFORSECS"] = "思考 %1 %2 秒";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Return the sum of the two numbers.";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Return the quotient of the two numbers.";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Return the difference of the two numbers.";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Return the product of the two numbers.";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
Blockly.Msg["MATH_CHANGE_TITLE"] = "change %1 by %2";  // untranslated
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Add a number to variable '%1'.";  // untranslated
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "is divisible by";  // untranslated
Blockly.Msg["MATH_IS_EVEN"] = "is even";  // untranslated
Blockly.Msg["MATH_IS_NEGATIVE"] = "is negative";  // untranslated
Blockly.Msg["MATH_IS_ODD"] = "is odd";  // untranslated
Blockly.Msg["MATH_IS_POSITIVE"] = "is positive";  // untranslated
Blockly.Msg["MATH_IS_PRIME"] = "is prime";  // untranslated
Blockly.Msg["MATH_IS_TOOLTIP"] = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
Blockly.Msg["MATH_IS_WHOLE"] = "is whole";  // untranslated
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
Blockly.Msg["MATH_MODULO_TITLE"] = "remainder of %1 ÷ %2";  // untranslated
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";  // untranslated
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "A number.";  // untranslated
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "average of list";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "max of list";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "median of list";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "min of list";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "modes of list";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "random item of list";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "standard deviation of list";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "sum of list";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Return the largest number in the list.";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Return the smallest number in the list.";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Return the sum of all the numbers in the list.";  // untranslated
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "random fraction";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "round";  // untranslated
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "round down";  // untranslated
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "round up";  // untranslated
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Round a number up or down.";  // untranslated
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";  // untranslated
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "absolute";  // untranslated
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "square root";  // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Return the absolute value of a number.";  // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Return e to the power of a number.";  // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Return the natural logarithm of a number.";  // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Return the base 10 logarithm of a number.";  // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Return the negation of a number.";  // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Return 10 to the power of a number.";  // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Return the square root of a number.";  // untranslated
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";  // untranslated
Blockly.Msg["MATH_TRIG_ASIN"] = "asin";  // untranslated
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";  // untranslated
Blockly.Msg["MATH_TRIG_COS"] = "cos";  // untranslated
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated
Blockly.Msg["MATH_TRIG_SIN"] = "sin";  // untranslated
Blockly.Msg["MATH_TRIG_TAN"] = "tan";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Return the arccosine of a number.";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Return the arcsine of a number.";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Return the arctangent of a number.";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Return the cosine of a degree (not radian).";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Return the sine of a degree (not radian).";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Return the tangent of a degree (not radian).";  // untranslated
Blockly.Msg["MOTION_CHANGEXBY"] = "将x坐标增加 %1";
Blockly.Msg["MOTION_CHANGEYBY"] = "将y坐标增加 %1";
Blockly.Msg["MOTION_DIRECTION"] = "方向";
Blockly.Msg["MOTION_GLIDESECSTOXY"] = "在 %1 秒内滑动到 x: %2 y: %3";
Blockly.Msg["MOTION_GLIDETO"] = "在 %1 秒内滑动到 %2";
Blockly.Msg["MOTION_GLIDETO_POINTER"] = "鼠标指针";
Blockly.Msg["MOTION_GLIDETO_RANDOMPOSITION"] = "随机位置";
Blockly.Msg["MOTION_GOTO"] = "移到 %1";
Blockly.Msg["MOTION_GOTOXY"] = "移到 x: %1 y: %2";
Blockly.Msg["MOTION_GOTO_MOUSEPOINTER"] = "鼠标指针";
Blockly.Msg["MOTION_GOTO_RANDOM"] = "随机位置";
Blockly.Msg["MOTION_IFONEDGEBOUNCE"] = "碰到边缘就反弹";
Blockly.Msg["MOTION_MOVESTEPS"] = "移动 %1 步";
Blockly.Msg["MOTION_POINTINDIRECTION"] = "面向 %1 方向";
Blockly.Msg["MOTION_POINTTOWARDS"] = "面向 %1";
Blockly.Msg["MOTION_POINTTOWARDS_MOUSEPOINTER"] = "鼠标指针";
Blockly.Msg["MOTION_ROTATIONSTYLE_ALLAROUND"] = "任意";
Blockly.Msg["MOTION_ROTATIONSTYLE_LEFTRIGHT"] = "左-右翻转";
Blockly.Msg["MOTION_ROTATIONSTYLE_NOROTATE"] = "不旋转";
Blockly.Msg["MOTION_SETROTATIONSTYLE"] = "将旋转模式设定为 %1";
Blockly.Msg["MOTION_SETX"] = "将x坐标设定为 %1";
Blockly.Msg["MOTION_SETY"] = "将y坐标设定为 %1";
Blockly.Msg["MOTION_TURNLEFT"] = "向左旋转 %1 %2 度";
Blockly.Msg["MOTION_TURNRIGHT"] = "向右旋转 %1 %2 度";
Blockly.Msg["MOTION_XPOSITION"] = "x坐标";
Blockly.Msg["MOTION_YPOSITION"] = "y坐标";
Blockly.Msg["NEW_LIST"] = "创建链表...";
Blockly.Msg["NEW_VARIABLE"] = "新建变量...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "新的变量名:";
Blockly.Msg["OPERATORS_AND"] = "%1 与 %2";
Blockly.Msg["OPERATORS_JOIN"] = "连接 %1 和 %2";
Blockly.Msg["OPERATORS_LENGTH"] = "%1 的长度";
Blockly.Msg["OPERATORS_LETTER_OF"] = "第 %1 个字符: %2";
Blockly.Msg["OPERATORS_MATHOP"] = "%1 %2";
Blockly.Msg["OPERATORS_MATHOPABS"] = "绝对值";
Blockly.Msg["OPERATORS_MATHOPCEILING"] = "向上取整";
Blockly.Msg["OPERATORS_MATHOPFLOOR"] = "向下取整";
Blockly.Msg["OPERATORS_MATHOPSQRT"] = "平方根";
Blockly.Msg["OPERATORS_MOD"] = "%1 除以 %2 的余数";
Blockly.Msg["OPERATORS_NOT"] = "非 %1";
Blockly.Msg["OPERATORS_OR"] = "%1 或 %2";
Blockly.Msg["OPERATORS_RANDOM"] = "在 %1 到 %2 间随机选一个数";
Blockly.Msg["OPERATORS_ROUND"] = "将 %1 四舍五入";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
Blockly.Msg["PEN_CHANGEPENCOLORBY"] = "将画笔颜色增加 %1";
Blockly.Msg["PEN_CHANGEPENSHADEBY"] = "将画笔亮度增加 %1";
Blockly.Msg["PEN_CHANGEPENSIZEBY"] = "将画笔粗细增加 %1";
Blockly.Msg["PEN_CHANGEPENTRANSPARENCYBY"] = "将画笔透明度增加 %1";
Blockly.Msg["PEN_CLEAR"] = "清空";
Blockly.Msg["PEN_PENDOWN"] = "落笔";
Blockly.Msg["PEN_PENUP"] = "抬笔";
Blockly.Msg["PEN_SETPENCOLORTOCOLOR"] = "将画笔颜色设定为 %1";
Blockly.Msg["PEN_SETPENCOLORTONUM"] = "将画笔颜色设定为 %1";
Blockly.Msg["PEN_SETPENSHADETO"] = "将画笔亮度设定为 %1";
Blockly.Msg["PEN_SETPENSIZETO"] = "将画笔粗细设定为 %1";
Blockly.Msg["PEN_SETPENTRANSPARENCYTO"] = "将画笔透明度设定为 %1";
Blockly.Msg["PEN_STAMP"] = "图章";
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "with:";  // untranslated
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "with:";  // untranslated
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Create '%1'";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "do something";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "to";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "return";  // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "input name:";  // untranslated
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "inputs";  // untranslated
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
Blockly.Msg["PROCEDURE_ALREADY_EXISTS"] = "A procedure named '%1' already exists.";  // untranslated
Blockly.Msg["REDO"] = "Redo";  // untranslated
Blockly.Msg["REMOVE_COMMENT"] = "Remove Comment";  // untranslated
Blockly.Msg["RENAME_VARIABLE"] = "重命名变量...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "重命名所有变量 '%1' 为:";
Blockly.Msg["SENSING_COLORISTOUCHINGCOLOR"] = "颜色 %1 碰到 %2?";
Blockly.Msg["SENSING_CURRENT"] = "目前时间的 %1";
Blockly.Msg["SENSING_CURRENTMENUDATE"] = "日";
Blockly.Msg["SENSING_CURRENTMENUHOUR"] = "时";
Blockly.Msg["SENSING_CURRENTMENUMINUTE"] = "分";
Blockly.Msg["SENSING_CURRENTMENUMONTH"] = "月";
Blockly.Msg["SENSING_CURRENTMENUSECOND"] = "秒";
Blockly.Msg["SENSING_CURRENTMENUWEEK"] = "周";
Blockly.Msg["SENSING_CURRENTMENUYEAR"] = "年";
Blockly.Msg["SENSING_DAYSSINCE2000"] = "自2000年至今的天数";
Blockly.Msg["SENSING_DISTANCETO"] = "到 %1 的距离";
Blockly.Msg["SENSING_DISTANCETOMENUMOUSEPOINTER"] = "鼠标指针";
Blockly.Msg["SENSING_KEYMENUANY"] = "任意键";
Blockly.Msg["SENSING_KEYMENUDOWN"] = "下移键";
Blockly.Msg["SENSING_KEYMENULEFT"] = "左移键";
Blockly.Msg["SENSING_KEYMENURIGHT"] = "右移键";
Blockly.Msg["SENSING_KEYMENUSPACE"] = "空格";
Blockly.Msg["SENSING_KEYMENUUP"] = "上移键";
Blockly.Msg["SENSING_KEYPRESSED"] = "按键 %1 是否按下?";
Blockly.Msg["SENSING_LOUDNESS"] = "响度";
Blockly.Msg["SENSING_MOUSEDOWN"] = "鼠标键被按下?";
Blockly.Msg["SENSING_MOUSEX"] = "鼠标的x坐标";
Blockly.Msg["SENSING_MOUSEY"] = "鼠标的y坐标";
Blockly.Msg["SENSING_OF"] = "%1 对于 %2";
Blockly.Msg["SENSING_OFMENUBACKDROPNAME"] = "背景名称";
Blockly.Msg["SENSING_OFMENUBACKDROPORDER"] = "背景编号";
Blockly.Msg["SENSING_OFMENUCOSTUMENAME"] = "造型名称";
Blockly.Msg["SENSING_OFMENUCOSTUMEORDER"] = "造型编号";
Blockly.Msg["SENSING_OFMENUDIRECTION"] = "方向";
Blockly.Msg["SENSING_OFMENUSIZE"] = "大小";
Blockly.Msg["SENSING_OFMENUVOLUME"] = "音量";
Blockly.Msg["SENSING_OFMENUXPOSITION"] = "x坐标";
Blockly.Msg["SENSING_OFMENUYPOSITION"] = "y坐标";
Blockly.Msg["SENSING_RESETTIMER"] = "计时器归零";
Blockly.Msg["SENSING_TIMER"] = "计时器";
Blockly.Msg["SENSING_TOUCHINGCOLOR"] = "碰到颜色 %1?";
Blockly.Msg["SENSING_TOUCHINGOBJECT"] = "碰到 %1?";
Blockly.Msg["SENSING_TOUCHINGOBJECTMENUEDGE"] = "边缘";
Blockly.Msg["SENSING_TOUCHINGOBJECTMENUMOUSEPOINTER"] = "鼠标指针";
Blockly.Msg["SHOW_PROCEDURE_DEFINITION"] = "Go to definition";  // untranslated
Blockly.Msg["SOUND_CHANGEEFFECTBY"] = "将 %1 声音特效增加 %2";
Blockly.Msg["SOUND_CHANGETEMPOBY"] = "将演奏速度加快 %1";
Blockly.Msg["SOUND_CHANGEVOLUMEBY"] = "将音量增加 %1";
Blockly.Msg["SOUND_CLEAREFFECTS"] = "清除所有声音特效";
Blockly.Msg["SOUND_DRUMSMENU01"] = "(1) 小军鼓";
Blockly.Msg["SOUND_DRUMSMENU02"] = "(2) 低音鼓";
Blockly.Msg["SOUND_DRUMSMENU03"] = "(3) 鼓边敲击";
Blockly.Msg["SOUND_DRUMSMENU04"] = "(4) 碎音钹";
Blockly.Msg["SOUND_DRUMSMENU05"] = "(5) 开音双面钹";
Blockly.Msg["SOUND_DRUMSMENU06"] = "(6) 闭音双面钹";
Blockly.Msg["SOUND_DRUMSMENU07"] = "(7) 铃鼓";
Blockly.Msg["SOUND_DRUMSMENU08"] = "(8) 拍掌";
Blockly.Msg["SOUND_DRUMSMENU09"] = "(9) 音棒";
Blockly.Msg["SOUND_DRUMSMENU10"] = "(10) 木鱼";
Blockly.Msg["SOUND_DRUMSMENU11"] = "(11) 牛铃";
Blockly.Msg["SOUND_DRUMSMENU12"] = "(12) 三角铁";
Blockly.Msg["SOUND_DRUMSMENU13"] = "(13) 小手鼓";
Blockly.Msg["SOUND_DRUMSMENU14"] = "(14) 康加鼓";
Blockly.Msg["SOUND_DRUMSMENU15"] = "(15) 卡巴沙";
Blockly.Msg["SOUND_DRUMSMENU16"] = "(16) 锯琴";
Blockly.Msg["SOUND_DRUMSMENU17"] = "(17) 颤击";
Blockly.Msg["SOUND_DRUMSMENU18"] = "(18) 开音鸟鸣桶";
Blockly.Msg["SOUND_EFFECTSMENUPAN"] = "pan left/right";
Blockly.Msg["SOUND_EFFECTSMENUPITCH"] = "pitch";
Blockly.Msg["SOUND_INSTRUMENTSMENU01"] = "(1) 钢琴";
Blockly.Msg["SOUND_INSTRUMENTSMENU02"] = "(2) 电子琴";
Blockly.Msg["SOUND_INSTRUMENTSMENU03"] = "(3) 风琴";
Blockly.Msg["SOUND_INSTRUMENTSMENU04"] = "(4) 吉他";
Blockly.Msg["SOUND_INSTRUMENTSMENU05"] = "(5) 电吉他";
Blockly.Msg["SOUND_INSTRUMENTSMENU06"] = "(6) 低音";
Blockly.Msg["SOUND_INSTRUMENTSMENU07"] = "(7) 拨奏乐器";
Blockly.Msg["SOUND_INSTRUMENTSMENU08"] = "(8) 大提琴";
Blockly.Msg["SOUND_INSTRUMENTSMENU09"] = "(9) 长号";
Blockly.Msg["SOUND_INSTRUMENTSMENU10"] = "(10) 单簧管";
Blockly.Msg["SOUND_INSTRUMENTSMENU11"] = "(11) 萨克斯管";
Blockly.Msg["SOUND_INSTRUMENTSMENU12"] = "(12) 长笛";
Blockly.Msg["SOUND_INSTRUMENTSMENU13"] = "(13) 木笛";
Blockly.Msg["SOUND_INSTRUMENTSMENU14"] = "(14) 低音管";
Blockly.Msg["SOUND_INSTRUMENTSMENU15"] = "(15) 唱诗班";
Blockly.Msg["SOUND_INSTRUMENTSMENU16"] = "(16) 抖音琴";
Blockly.Msg["SOUND_INSTRUMENTSMENU17"] = "(17) 音乐盒";
Blockly.Msg["SOUND_INSTRUMENTSMENU18"] = "(18) 钢鼓";
Blockly.Msg["SOUND_INSTRUMENTSMENU19"] = "(19) 马林巴琴";
Blockly.Msg["SOUND_INSTRUMENTSMENU20"] = "(20) 合成领奏";
Blockly.Msg["SOUND_INSTRUMENTSMENU21"] = "(21) 合成长音";
Blockly.Msg["SOUND_PLAY"] = "播放声音 %1";
Blockly.Msg["SOUND_PLAYDRUMFORBEATS"] = "弹奏鼓声 %1 %2 拍";
Blockly.Msg["SOUND_PLAYNOTEFORBEATS"] = "弹奏音符 %1 %2 拍";
Blockly.Msg["SOUND_PLAYUNTILDONE"] = "播放声音 %1 直到播放完毕";
Blockly.Msg["SOUND_RESTFORBEATS"] = "休止 %1 拍";
Blockly.Msg["SOUND_SETEFFECTTO"] = "将 %1 声音特效设定为 %2";
Blockly.Msg["SOUND_SETINSTRUMENTTO"] = "演奏乐器设为 %1";
Blockly.Msg["SOUND_SETTEMPOTOBPM"] = "将演奏速度设定为 %1 bpm";
Blockly.Msg["SOUND_SETVOLUMETO"] = "将音量设定为 %1%";
Blockly.Msg["SOUND_STOPALLSOUNDS"] = "停播所有声音";
Blockly.Msg["SOUND_TEMPO"] = "演奏速度";
Blockly.Msg["SOUND_VOLUME"] = "音量";
Blockly.Msg["TEXT_APPEND_APPENDTEXT"] = "append text";  // untranslated
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TO"] = "to";  // untranslated
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
Blockly.Msg["TEXT_CHARAT_FIRST"] = "get first letter";  // untranslated
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "get letter # from end";  // untranslated
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "get letter #";  // untranslated
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_INPUT_INTEXT"] = "in text";  // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "get last letter";  // untranslated
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "get random letter";  // untranslated
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "join";  // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "to letter #";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "to last letter";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_INPUT_INTEXT"] = "in text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "create text with";  // untranslated
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "length of %1";  // untranslated
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "print %1";  // untranslated
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text.";  // untranslated
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
Blockly.Msg["TODAY"] = "Today";  // untranslated
Blockly.Msg["UNDO"] = "Undo";  // untranslated
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "item";  // untranslated
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Create 'set %1'";  // untranslated
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
Blockly.Msg["VARIABLES_SET"] = "set %1 to %2";  // untranslated
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'";  // untranslated
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "变量名 '%1' 已存在.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "变量名 '%1' 已在另一个类型 '%2' 中存在.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "330";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["PROCEDURES_HUE"] = "290";
Blockly.Msg["COLOUR_HUE"] = "20";