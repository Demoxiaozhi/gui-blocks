Blockly.Arduino['math_positive_number'] = function(block) {
    // Numeric value.
    var code = parseFloat(block.getFieldValue('NUM'));
    if (code == Infinity) {
        code = 'INFINITY';
    } else if (code == -Infinity) {
        code = '-INFINITY';
    }
    return [code, Blockly.Arduino.ORDER_ATOMIC];
}

Blockly.Arduino['math_whole_number'] = function(block) {
    // Numeric value.
    var code = parseFloat(block.getFieldValue('NUM'));
    if (code == Infinity) {
        code = 'INFINITY';
    } else if (code == -Infinity) {
        code = '-INFINITY';
    }
    return [code, Blockly.Arduino.ORDER_ATOMIC];
}

Blockly.Arduino['math_number'] = function(block) {
    // Numeric value.
    var code = parseFloat(block.getFieldValue('NUM'));
    if (code == Infinity) {
        code = 'INFINITY';
    } else if (code == -Infinity) {
        code = '-INFINITY';
    }
    return [code, Blockly.Arduino.ORDER_ATOMIC];
}

Blockly.Arduino['text'] = function(block) {
    var code = block.getFieldValue('TEXT');
    code = code.toString();
    return [code, Blockly.Arduino.ORDER_ATOMIC];
}
